DROP TRIGGER CHK_SAL;

CREATE OR REPLACE TRIGGER chk_sal
BEFORE UPDATE OR INSERT OF SALARY
ON INSA
FOR EACH ROW
BEGIN
DBMS_OUTPUT.PUT_LINE('변경 전 급여 :' || :OLD.SALARY);
DBMS_OUTPUT.PUT_LINE('변경 후 급여 :' || :NEW.SALARY);
END;
/


DROP TRIGGER CHK_ROW_UDP;

CREATE OR REPLACE TRIGGER chk_row_udp
BEFORE UPDATE OF SALARY 
ON INSA
FOR EACH ROW
ENABLE
BEGIN
INSERT INTO chk_row (SEQ_NO, TIME_IN, SABUN, ENG_NAME,
 COL_NAME, O_DATA, N_DATA) 
VALUES 
( 
(SELECT  /*+ INDEX_DESC(CHK_ROW  CHK_ROW_PK) */  
      DECODE(MAX(SEQ_NO),NULL,1,MAX(SEQ_NO)+1) 
FROM CHK_ROW),
--WHERE ROWNUM = 1), 
  SYSDATE,
  :OLD.SABUN,
  :OLD.ENG_NAME, 
  'SALARY',
  :OLD.SALARY,
  :NEW.SALARY);
DBMS_OUTPUT.PUT_LINE(:OLD.ENG_NAME || '님의 급여 정보가 변경되었습니다.');
DBMS_OUTPUT.PUT_LINE('수정 전 금액 :' || :OLD.SALARY);
DBMS_OUTPUT.PUT_LINE('수정 후 금액 :' || :NEW.SALARY);
END;
/DROP TRIGGER CHK_ROW_UDP;

CREATE OR REPLACE TRIGGER chk_row_udp
BEFORE UPDATE OF SALARY 
ON INSA
FOR EACH ROW
ENABLE
BEGIN
INSERT INTO chk_row (SEQ_NO, TIME_IN, SABUN, ENG_NAME,
 COL_NAME, O_DATA, N_DATA) 
VALUES 
( 
(SELECT  /*+ INDEX_DESC(CHK_ROW  CHK_ROW_PK) */  
      DECODE(MAX(SEQ_NO),NULL,1,MAX(SEQ_NO)+1) 
FROM CHK_ROW),
--WHERE ROWNUM = 1), 
  SYSDATE,
  :OLD.SABUN,
  :OLD.ENG_NAME, 
  'SALARY',
  :OLD.SALARY,
  :NEW.SALARY);
DBMS_OUTPUT.PUT_LINE(:OLD.ENG_NAME || '님의 급여 정보가 변경되었습니다.');
DBMS_OUTPUT.PUT_LINE('수정 전 금액 :' || :OLD.SALARY);
DBMS_OUTPUT.PUT_LINE('수정 후 금액 :' || :NEW.SALARY);
END;
/